import axios from 'axios';

const API_URL = 'http://localhost:1488/api';

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...');
    try {
      const response = await axios.get(`${API_URL}/auth/login`);
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
    } catch (error) {
      if (error.response?.status === 405) {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (–º–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)');
      } else {
        console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
        return;
      }
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞...');
    try {
      const response = await axios.get(`${API_URL}/users`);
      console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è');
      } else if (error.response?.status === 403) {
        console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      } else {
        console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å:', error.response?.status);
      }
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...');
    try {
      const response = await axios.get(`${API_URL}/users`, {
        headers: { Authorization: 'Bearer invalid_token' }
      });
      console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –æ—Ç–∫–ª–æ–Ω–µ–Ω');
      } else if (error.response?.status === 403) {
        console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      } else {
        console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å:', error.response?.status);
      }
    }

    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('\nüí° –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤–æ–π—Ç–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAPI();